{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x30A84fde91F27bE8b65Ff38336Ff6465E3169EC9",
    "txHash": "0x8f98b6c04adbbf00dd704dc32f85146cca1f48395f159e1fde0546482dcbbcaa"
  },
  "proxies": [
    {
      "address": "0x8676f321a9C88C94f94598571B0228556B4Ca55e",
      "txHash": "0x04424fb4bdb4604f76de9b1f9ca1ddc8947e91f6530cf1c717ffec853c64fcc3",
      "kind": "transparent"
    },
    {
      "address": "0x7C3879655A1F00601FbF1E5f4D950097A3daCc73",
      "txHash": "0x7107b7a64ffcfc418171c20ac968d06e784c364708f0f694f4032656816f7bff",
      "kind": "transparent"
    },
    {
      "address": "0x27e84E489B347765D72695102A9f73a30736C484",
      "txHash": "0x5ea02f64e3faed492f14ebca890c88e62d276b37f3faea06c8be763d951fd651",
      "kind": "transparent"
    },
    {
      "address": "0x2ce879eAbd45e1Dc2e4AeDfA5767F296F7a61b8f",
      "txHash": "0xb15a832463bc5d90db9af37465ad5cd9a3a9d9106a9fb7c7bbf4e93e91815082",
      "kind": "transparent"
    },
    {
      "address": "0xeF4a4cDD9C02A7766017106C6E4645768c5DBF9D",
      "txHash": "0xa602dbf956324e9b29ac182c496983559341ac1fda3a5cdba7cf09b65a2e1ef3",
      "kind": "transparent"
    },
    {
      "address": "0x4e64D870b313A78f110514397a598F915C9A0C80",
      "txHash": "0x11ccf43f8babd6d95e233ce34cd464eb9b15c73d1d474664aaed2aaefe312653",
      "kind": "transparent"
    },
    {
      "address": "0x7B851318610FeF3d31f0867D7DD62afa9F1F0761",
      "txHash": "0xaffd173662e9def7909cb718fcc8232d51df15f35f850f027205d8497547b5e9",
      "kind": "transparent"
    },
    {
      "address": "0x64C6D8A3c8e4b6EfEfa78bFf86Abf0F581069a08",
      "txHash": "0x864310915fc0cfec81ccd02852b45ccb0532b240a5e751d870de0971aa346ea3",
      "kind": "transparent"
    },
    {
      "address": "0x153fE8C417dc5d0f57C2738e8435d2182b73699F",
      "txHash": "0x4b01728ce4c6ce403ca2bc481db590ba2fc3c7e5cf5e2ddbce5c2b0c3ba662b9",
      "kind": "transparent"
    },
    {
      "address": "0x01F1E34f0A130DCb761836EF0f89CD46B0dD9408",
      "txHash": "0xd93a6cecead676800bf770d3f14256f977fc641324bf0c971657d2deee015fc4",
      "kind": "transparent"
    },
    {
      "address": "0x79c0Dd4c787123D5506aA8D8dDb7624B9671De75",
      "txHash": "0x50c8f4d6e5f5b6d3ce4a9ce9fda1b40ea4f0f5acfc3ff5c0213854b2d56dd071",
      "kind": "transparent"
    },
    {
      "address": "0x3d32554eAC6Fad09EFe1f3CF5c8F93173a4e22cE",
      "txHash": "0x1ab553bcbd2548188466d0f03c21d4abd1ddd09f816b98464be3313be6f49875",
      "kind": "transparent"
    },
    {
      "address": "0x2bb3fD6c0362B9d8EE1F3D99e3F7bb9C8B623cc8",
      "txHash": "0xa47c627b2aa72eeadf329dcc3ba8de7e2b83dd6738ad58d82256802f15e8de1a",
      "kind": "transparent"
    },
    {
      "address": "0x325cCa2291d49AB588010B575fb6522C07391ba7",
      "txHash": "0x69102edda67c9c85b6daabf2887b05c86cfd5a658584ab9426811a3c1ef65c98",
      "kind": "transparent"
    },
    {
      "address": "0xA508a8E6263250aB41595c56d9311A941Fda6990",
      "txHash": "0xe85034936fceebbb80633efae015d7f773dff7529b117dd2b030e3640c8747f5",
      "kind": "transparent"
    },
    {
      "address": "0x9375F4cbD51b99365deA0d05726e0dA359f27127",
      "txHash": "0x2330f3ffceae88262417da16f7ce7bf7b8ae20cae6cc3a4a6b6c0ec676682da7",
      "kind": "transparent"
    },
    {
      "address": "0x7Ce33BecC7B8e3F73cd34c52B34122634418cF39",
      "txHash": "0x3d37810625f953e15f3e59314c51d285b30f8c43638047f97af404d4af02062c",
      "kind": "transparent"
    },
    {
      "address": "0x08f7492A005a772c09178Aec39171440277b6003",
      "txHash": "0xfdce49db1467c867d84fa318ae74402f8e6b83d829544c604c7b4f29dbeff1b4",
      "kind": "transparent"
    },
    {
      "address": "0x38efCc435b677d8c68bC48A4F2EDFDA1eD2917F3",
      "txHash": "0x13c4c3d8f746f8d3091299b066394cd7f6eec4907b60e4c6aad10a5bd3e8ea14",
      "kind": "transparent"
    },
    {
      "address": "0x742cBfdb458B12645675bE3066Bc4d4992D69004",
      "txHash": "0x69314c1ab9fde4ef5045b240db46608de82faa9ea6fff9cbbd47279d06961020",
      "kind": "transparent"
    },
    {
      "address": "0x3bf7Db21B28edF0a3a13F9Eb30D731302f02cbcA",
      "txHash": "0x59bb5db1fba913720033218a17df3201180a533416b76a12f5097477226703ff",
      "kind": "transparent"
    },
    {
      "address": "0xE62D9F233e269fadc7164107412B26D44Aedf1B7",
      "txHash": "0x0afb79f1a1fab3d071ae7054442bc867cc3f996c71ad35457800a480b7a172b5",
      "kind": "transparent"
    },
    {
      "address": "0x42a5d17F2dEf387E42076F18Bd6366F729020D91",
      "txHash": "0x9f51b83c3ce6d871fb4f4d8e6cc6d272a2634083c697a5e8a228c36b07e1ecce",
      "kind": "transparent"
    },
    {
      "address": "0xCBBe3423bEA4D4ADe228139d9f6F10F023Eb70A0",
      "txHash": "0xb1a4e0f6ea0d7caa6174ced9f4ba1232b2fa616c6aa5d5bee5f4389635678b1c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "96ed2e02511d607a1441452069a5e7f67b27bd8573c345fc3055ba78f7c8ba4a": {
      "address": "0xEba41eB5c89F6A4Bef56373cA02dC19cF7268A13",
      "txHash": "0x4e1d1cabe429866b19bdf99aee864f4073bc996c9b94aa6a0ba54421b18f21f3",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "paused",
            "offset": 2,
            "slot": "0",
            "type": "t_bool",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:33"
          },
          {
            "label": "roleManage",
            "offset": 3,
            "slot": "0",
            "type": "t_contract(IRoleManage)656",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:34"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ITokenFactory)689",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:35"
          },
          {
            "label": "vault",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IVaultStakingBSC)818",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:36"
          },
          {
            "label": "bridgeTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:37"
          },
          {
            "label": "orders",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(Order)968_storage)",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:38"
          },
          {
            "label": "limitLpIns",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRoleManage)656": {
            "label": "contract IRoleManage",
            "numberOfBytes": "20"
          },
          "t_contract(ITokenFactory)689": {
            "label": "contract ITokenFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultStakingBSC)818": {
            "label": "contract IVaultStakingBSC",
            "numberOfBytes": "20"
          },
          "t_enum(PlatformType)693": {
            "label": "enum PlatformType",
            "members": [
              "HASHNOTE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Order)968_storage)": {
            "label": "mapping(address => struct VaultRwaManager.Order)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Order)968_storage": {
            "label": "struct VaultRwaManager.Order",
            "members": [
              {
                "label": "baseToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pairToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minimumDeposit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "delayBuyDay",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "delaySellDay",
                "type": "t_uint8",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "beneficialAddress",
                "type": "t_address",
                "offset": 2,
                "slot": "3"
              },
              {
                "label": "platformType",
                "type": "t_enum(PlatformType)693",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "platformHelper",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 21,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2fb2ad3d44c88f49b6ffbb0b796f683370ea745a397bc7f1f94d6cb1020a2732": {
      "address": "0x61886471415D40b04dcf48d2e5CDBe7145701C8b",
      "txHash": "0x370d69ae5bedf28876c9d4104c785d4214d565e6d05c5606a80c34744aabb0b8",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "pendingValueWithdraw",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:49"
          },
          {
            "label": "rebaseHistorys",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_struct(RebaseHistory)4360_storage)dyn_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:50"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:53"
          },
          {
            "label": "roleManage",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IRoleManage)4342",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:56"
          },
          {
            "label": "withdrawNft",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IWithdrawRequestNFT)4556",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:59"
          },
          {
            "label": "whitelistManager",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IWhitelistManager)4519",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:62"
          },
          {
            "label": "vaultManager",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(IVaultRwaManager)4478",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:65"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(ISwapRouter02)4804",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:68"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)4355_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(RebaseHistory)4360_storage)dyn_storage": {
            "label": "struct IVaultRwa.RebaseHistory[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRoleManage)4342": {
            "label": "contract IRoleManage",
            "numberOfBytes": "20"
          },
          "t_contract(ISwapRouter02)4804": {
            "label": "contract ISwapRouter02",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultRwaManager)4478": {
            "label": "contract IVaultRwaManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWhitelistManager)4519": {
            "label": "contract IWhitelistManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawRequestNFT)4556": {
            "label": "contract IWithdrawRequestNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(RebaseHistory)4360_storage)dyn_storage)": {
            "label": "mapping(address => struct IVaultRwa.RebaseHistory[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)4355_storage)": {
            "label": "mapping(uint256 => struct IVaultRwa.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(RebaseHistory)4360_storage": {
            "label": "struct IVaultRwa.RebaseHistory",
            "members": [
              {
                "label": "rebaseAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawRequest)4355_storage": {
            "label": "struct IVaultRwa.WithdrawRequest",
            "members": [
              {
                "label": "baseToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shareOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "completed",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "66aef69bdb6c8fc40a446732064ca9777d5ce29bfba59df42d3670094e8b0c27": {
      "address": "0x6b198a67E684871A85043B34274ECbfa904CA56D",
      "txHash": "0xc05cc7a20634af710c9be25be94f1ac73e0313d589fe743b24d38a953a0ff353",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "paused",
            "offset": 2,
            "slot": "0",
            "type": "t_bool",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:32"
          },
          {
            "label": "roleManage",
            "offset": 3,
            "slot": "0",
            "type": "t_contract(IRoleManage)10935",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:33"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ITokenFactory)10968",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:34"
          },
          {
            "label": "vault",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IVaultStakingBSC)11276",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:35"
          },
          {
            "label": "bridgeTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:36"
          },
          {
            "label": "orders",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(Order)21220_storage)",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:37"
          },
          {
            "label": "limitLpIns",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRoleManage)10935": {
            "label": "contract IRoleManage",
            "numberOfBytes": "20"
          },
          "t_contract(ITokenFactory)10968": {
            "label": "contract ITokenFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultStakingBSC)11276": {
            "label": "contract IVaultStakingBSC",
            "numberOfBytes": "20"
          },
          "t_enum(PlatformType)11149": {
            "label": "enum PlatformType",
            "members": [
              "HASHNOTE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Order)21220_storage)": {
            "label": "mapping(address => struct VaultRwaManager.Order)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Order)21220_storage": {
            "label": "struct VaultRwaManager.Order",
            "members": [
              {
                "label": "baseToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pairToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minimumDeposit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "delayBuyDay",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "delaySellDay",
                "type": "t_uint8",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "beneficialAddress",
                "type": "t_address",
                "offset": 2,
                "slot": "3"
              },
              {
                "label": "platformType",
                "type": "t_enum(PlatformType)11149",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "platformHelper",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 21,
                "slot": "4"
              },
              {
                "label": "redirect",
                "type": "t_bool",
                "offset": 22,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7fd92a8bbc8dbf83e00beecff5e3ef7c94a37280b56360c712e39c0c600e0110": {
      "address": "0x5833E2D6f499949Ff4681f1BC22eB155Dc63CdB1",
      "txHash": "0xcd8717c67560781fe4f2e68d7fb802ea1c5e94522e091273bcc18bb709fefccd",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "pendingValueWithdraw",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:49"
          },
          {
            "label": "rebaseHistorys",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_struct(RebaseHistory)4360_storage)dyn_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:50"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:53"
          },
          {
            "label": "roleManage",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IRoleManage)4342",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:56"
          },
          {
            "label": "withdrawNft",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IWithdrawRequestNFT)4558",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:59"
          },
          {
            "label": "whitelistManager",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IWhitelistManager)4521",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:62"
          },
          {
            "label": "vaultManager",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(IVaultRwaManager)4480",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:65"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(ISwapRouter02)4806",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:68"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)4355_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(RebaseHistory)4360_storage)dyn_storage": {
            "label": "struct IVaultRwa.RebaseHistory[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRoleManage)4342": {
            "label": "contract IRoleManage",
            "numberOfBytes": "20"
          },
          "t_contract(ISwapRouter02)4806": {
            "label": "contract ISwapRouter02",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultRwaManager)4480": {
            "label": "contract IVaultRwaManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWhitelistManager)4521": {
            "label": "contract IWhitelistManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawRequestNFT)4558": {
            "label": "contract IWithdrawRequestNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(RebaseHistory)4360_storage)dyn_storage)": {
            "label": "mapping(address => struct IVaultRwa.RebaseHistory[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)4355_storage)": {
            "label": "mapping(uint256 => struct IVaultRwa.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(RebaseHistory)4360_storage": {
            "label": "struct IVaultRwa.RebaseHistory",
            "members": [
              {
                "label": "rebaseAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawRequest)4355_storage": {
            "label": "struct IVaultRwa.WithdrawRequest",
            "members": [
              {
                "label": "baseToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shareOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "completed",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f563ec75c507f20fd9836238c97f94ff6ce9ddf2d1b1b496a150cc331ff836e6": {
      "address": "0x7e7A3F6C8B47Ab4d61B8cdEe8fF72B923f804b8E",
      "txHash": "0x3c1e3a9c6ad918fa23f57fcf845e06832294e294978af034278cab6597afd980",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "pendingValueWithdraw",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:49"
          },
          {
            "label": "rebaseHistorys",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_struct(RebaseHistory)10411_storage)dyn_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:50"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:53"
          },
          {
            "label": "roleManage",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IRoleManage)10243",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:56"
          },
          {
            "label": "withdrawNft",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IWithdrawRequestNFT)10769",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:59"
          },
          {
            "label": "whitelistManager",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IWhitelistManager)10732",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:62"
          },
          {
            "label": "vaultManager",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(IVaultRwaManager)10531",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:65"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(ISwapRouter02)12877",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:68"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)10406_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(RebaseHistory)10411_storage)dyn_storage": {
            "label": "struct IVaultRwa.RebaseHistory[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRoleManage)10243": {
            "label": "contract IRoleManage",
            "numberOfBytes": "20"
          },
          "t_contract(ISwapRouter02)12877": {
            "label": "contract ISwapRouter02",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultRwaManager)10531": {
            "label": "contract IVaultRwaManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWhitelistManager)10732": {
            "label": "contract IWhitelistManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawRequestNFT)10769": {
            "label": "contract IWithdrawRequestNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(RebaseHistory)10411_storage)dyn_storage)": {
            "label": "mapping(address => struct IVaultRwa.RebaseHistory[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)10406_storage)": {
            "label": "mapping(uint256 => struct IVaultRwa.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(RebaseHistory)10411_storage": {
            "label": "struct IVaultRwa.RebaseHistory",
            "members": [
              {
                "label": "rebaseAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawRequest)10406_storage": {
            "label": "struct IVaultRwa.WithdrawRequest",
            "members": [
              {
                "label": "baseToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shareOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "completed",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d1c951671a833defbda2adf70248b6f47cc5948715ea8e6abb61b133247465c0": {
      "address": "0xf3fA5bCD166354aAA0b1C66dF92562c93603D2ad",
      "txHash": "0x56967977a77c0bcc1eb315d7130d133cc72d4b9ad6b569fc7ae322c434acf651",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "pendingValueWithdraw",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:50"
          },
          {
            "label": "rebaseHistorys",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_struct(RebaseHistory)4562_storage)dyn_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:51"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:54"
          },
          {
            "label": "roleManage",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IRoleManage)4544",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:57"
          },
          {
            "label": "withdrawNft",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IWithdrawRequestNFT)4743",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:60"
          },
          {
            "label": "whitelistManager",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IWhitelistManager)4706",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:63"
          },
          {
            "label": "vaultManager",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(IVaultRwaManager)4682",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:66"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(ISwapRouter02)4991",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:69"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)4557_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:72"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(RebaseHistory)4562_storage)dyn_storage": {
            "label": "struct IVaultRwa.RebaseHistory[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRoleManage)4544": {
            "label": "contract IRoleManage",
            "numberOfBytes": "20"
          },
          "t_contract(ISwapRouter02)4991": {
            "label": "contract ISwapRouter02",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultRwaManager)4682": {
            "label": "contract IVaultRwaManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWhitelistManager)4706": {
            "label": "contract IWhitelistManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawRequestNFT)4743": {
            "label": "contract IWithdrawRequestNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(RebaseHistory)4562_storage)dyn_storage)": {
            "label": "mapping(address => struct IVaultRwa.RebaseHistory[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)4557_storage)": {
            "label": "mapping(uint256 => struct IVaultRwa.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(RebaseHistory)4562_storage": {
            "label": "struct IVaultRwa.RebaseHistory",
            "members": [
              {
                "label": "rebaseAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawRequest)4557_storage": {
            "label": "struct IVaultRwa.WithdrawRequest",
            "members": [
              {
                "label": "baseToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shareOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "completed",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "57668ea50db0004578ebf5986dd6964b740910e46d9fd60adb78c1aba2dc3477": {
      "address": "0xbe156fEBDe76B06e3b5321d78327139F46e0ed90",
      "txHash": "0xfc755e3d78d72f2994463c227d017c9dc5b08dfb7440b43c9dbd16a774cb9faf",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "pendingValueWithdraw",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:44"
          },
          {
            "label": "rebaseHistorys",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_struct(RebaseHistory)5059_storage)dyn_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:50"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:53"
          },
          {
            "label": "roleManage",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IRoleManage)4544",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:56"
          },
          {
            "label": "withdrawNft",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IWithdrawRequestNFT)4743",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:59"
          },
          {
            "label": "whitelistManager",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IWhitelistManager)4706",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:62"
          },
          {
            "label": "vaultManager",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(IVaultRwaManager)4682",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:65"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(ISwapRouter02)4991",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:68"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)4557_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(RebaseHistory)5059_storage)dyn_storage": {
            "label": "struct VaultRwa.RebaseHistory[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRoleManage)4544": {
            "label": "contract IRoleManage",
            "numberOfBytes": "20"
          },
          "t_contract(ISwapRouter02)4991": {
            "label": "contract ISwapRouter02",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultRwaManager)4682": {
            "label": "contract IVaultRwaManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWhitelistManager)4706": {
            "label": "contract IWhitelistManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawRequestNFT)4743": {
            "label": "contract IWithdrawRequestNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(RebaseHistory)5059_storage)dyn_storage)": {
            "label": "mapping(address => struct VaultRwa.RebaseHistory[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)4557_storage)": {
            "label": "mapping(uint256 => struct IVaultRwa.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(RebaseHistory)5059_storage": {
            "label": "struct VaultRwa.RebaseHistory",
            "members": [
              {
                "label": "rebaseAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawRequest)4557_storage": {
            "label": "struct IVaultRwa.WithdrawRequest",
            "members": [
              {
                "label": "baseToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shareOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "completed",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "6c86b1cf2991b8be139b6328bf4f94256fdbc63108521434d97762816a7de147": {
      "address": "0xc911aAc82e75Cf31C2689989cd3402481D6b7230",
      "txHash": "0xef71329fe917afb26286ea72248786060e36e4f8e1bebe77fb573e972c3dfe13",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "pendingValueWithdraw",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:44"
          },
          {
            "label": "rebaseHistorys",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_struct(RebaseHistory)5059_storage)dyn_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:50"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:53"
          },
          {
            "label": "roleManage",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IRoleManage)4544",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:56"
          },
          {
            "label": "withdrawNft",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IWithdrawRequestNFT)4743",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:59"
          },
          {
            "label": "whitelistManager",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IWhitelistManager)4706",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:62"
          },
          {
            "label": "vaultManager",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(IVaultRwaManager)4682",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:65"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(ISwapRouter02)4991",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:68"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)4557_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(RebaseHistory)5059_storage)dyn_storage": {
            "label": "struct VaultRwa.RebaseHistory[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRoleManage)4544": {
            "label": "contract IRoleManage",
            "numberOfBytes": "20"
          },
          "t_contract(ISwapRouter02)4991": {
            "label": "contract ISwapRouter02",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultRwaManager)4682": {
            "label": "contract IVaultRwaManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWhitelistManager)4706": {
            "label": "contract IWhitelistManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawRequestNFT)4743": {
            "label": "contract IWithdrawRequestNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(RebaseHistory)5059_storage)dyn_storage)": {
            "label": "mapping(address => struct VaultRwa.RebaseHistory[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)4557_storage)": {
            "label": "mapping(uint256 => struct IVaultRwa.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(RebaseHistory)5059_storage": {
            "label": "struct VaultRwa.RebaseHistory",
            "members": [
              {
                "label": "rebaseAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawRequest)4557_storage": {
            "label": "struct IVaultRwa.WithdrawRequest",
            "members": [
              {
                "label": "baseToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shareOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "completed",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "bc0ca810ccbe87e36c9b7f4eafa0a3769bcf10971f8eb29759685cb6faf3ad4e": {
      "address": "0x4215f3a31B5654AcaaebceBb182F7497923e061F",
      "txHash": "0x9b16ab04bbd880fcbab66f2c54c3d2f872534e02ec716efdd55b50300a18e2b2",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "pendingValueWithdraw",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:44"
          },
          {
            "label": "rebaseHistorys",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_struct(RebaseHistory)6598_storage)dyn_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:50"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:53"
          },
          {
            "label": "roleManage",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IRoleManage)5349",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:56"
          },
          {
            "label": "withdrawNft",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IWithdrawRequestNFT)5581",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:59"
          },
          {
            "label": "whitelistManager",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IWhitelistManager)5544",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:62"
          },
          {
            "label": "vaultManager",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(IVaultRwaManager)5520",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:65"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(ISwapRouter02)5829",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:68"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)5395_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(RebaseHistory)6598_storage)dyn_storage": {
            "label": "struct VaultRwa.RebaseHistory[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRoleManage)5349": {
            "label": "contract IRoleManage",
            "numberOfBytes": "20"
          },
          "t_contract(ISwapRouter02)5829": {
            "label": "contract ISwapRouter02",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultRwaManager)5520": {
            "label": "contract IVaultRwaManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWhitelistManager)5544": {
            "label": "contract IWhitelistManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawRequestNFT)5581": {
            "label": "contract IWithdrawRequestNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(RebaseHistory)6598_storage)dyn_storage)": {
            "label": "mapping(address => struct VaultRwa.RebaseHistory[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)5395_storage)": {
            "label": "mapping(uint256 => struct IVaultRwa.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(RebaseHistory)6598_storage": {
            "label": "struct VaultRwa.RebaseHistory",
            "members": [
              {
                "label": "rebaseAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawRequest)5395_storage": {
            "label": "struct IVaultRwa.WithdrawRequest",
            "members": [
              {
                "label": "baseToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shareOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "completed",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "1015b72568a7008e167295e6a57754f46a72e20ce92d2fdeb4772cd521e8e0d0": {
      "address": "0x4C3D99846313b3ace70464cea1234C66596892bD",
      "txHash": "0x2b159389c2998c060d59063834282c430c87c35efc32ccac4d16995ac1a00cdd",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "pendingValueWithdraw",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:44"
          },
          {
            "label": "rebaseHistorys",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_struct(RebaseHistory)5059_storage)dyn_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:50"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:53"
          },
          {
            "label": "roleManage",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IRoleManage)4544",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:56"
          },
          {
            "label": "withdrawNft",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IWithdrawRequestNFT)4743",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:59"
          },
          {
            "label": "whitelistManager",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IWhitelistManager)4706",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:62"
          },
          {
            "label": "vaultManager",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(IVaultRwaManager)4682",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:65"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(ISwapRouter02)4991",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:68"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)4557_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(RebaseHistory)5059_storage)dyn_storage": {
            "label": "struct VaultRwa.RebaseHistory[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRoleManage)4544": {
            "label": "contract IRoleManage",
            "numberOfBytes": "20"
          },
          "t_contract(ISwapRouter02)4991": {
            "label": "contract ISwapRouter02",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultRwaManager)4682": {
            "label": "contract IVaultRwaManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWhitelistManager)4706": {
            "label": "contract IWhitelistManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawRequestNFT)4743": {
            "label": "contract IWithdrawRequestNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(RebaseHistory)5059_storage)dyn_storage)": {
            "label": "mapping(address => struct VaultRwa.RebaseHistory[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)4557_storage)": {
            "label": "mapping(uint256 => struct IVaultRwa.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(RebaseHistory)5059_storage": {
            "label": "struct VaultRwa.RebaseHistory",
            "members": [
              {
                "label": "rebaseAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawRequest)4557_storage": {
            "label": "struct IVaultRwa.WithdrawRequest",
            "members": [
              {
                "label": "baseToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shareOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "completed",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7b4493a40446fff0d7cdf65b7d61b8efca0a5d191c4a824e6e4c169a647fe457": {
      "address": "0x0fC9B8DD12143A12F133009C42E8e4CabEE81091",
      "txHash": "0xd93b66588eb87aa17c2ecd57efe99a73cafe0ebd5325706d6a1f782b0b94b9c2",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "pendingValueWithdraw",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:44"
          },
          {
            "label": "rebaseHistorys",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_struct(RebaseHistory)5059_storage)dyn_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:50"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:53"
          },
          {
            "label": "roleManage",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IRoleManage)4544",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:56"
          },
          {
            "label": "withdrawNft",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IWithdrawRequestNFT)4743",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:59"
          },
          {
            "label": "whitelistManager",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IWhitelistManager)4706",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:62"
          },
          {
            "label": "vaultManager",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(IVaultRwaManager)4682",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:65"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(ISwapRouter02)4991",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:68"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)4557_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(RebaseHistory)5059_storage)dyn_storage": {
            "label": "struct VaultRwa.RebaseHistory[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRoleManage)4544": {
            "label": "contract IRoleManage",
            "numberOfBytes": "20"
          },
          "t_contract(ISwapRouter02)4991": {
            "label": "contract ISwapRouter02",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultRwaManager)4682": {
            "label": "contract IVaultRwaManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWhitelistManager)4706": {
            "label": "contract IWhitelistManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawRequestNFT)4743": {
            "label": "contract IWithdrawRequestNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(RebaseHistory)5059_storage)dyn_storage)": {
            "label": "mapping(address => struct VaultRwa.RebaseHistory[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)4557_storage)": {
            "label": "mapping(uint256 => struct IVaultRwa.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(RebaseHistory)5059_storage": {
            "label": "struct VaultRwa.RebaseHistory",
            "members": [
              {
                "label": "rebaseAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawRequest)4557_storage": {
            "label": "struct IVaultRwa.WithdrawRequest",
            "members": [
              {
                "label": "baseToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shareOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "completed",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "32968cab095ed9c9fd8ce270babb83b5bcc059ed41d9cf465a6a80241a608d50": {
      "address": "0xA0F2859b2763C5DC4D88Dc846B07Eaeb3940f973",
      "txHash": "0x43d546b86f3561fe455408e3a75df8e72508d403442f8313dde2af497bf06bfc",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "paused",
            "offset": 2,
            "slot": "0",
            "type": "t_bool",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:32"
          },
          {
            "label": "roleManage",
            "offset": 3,
            "slot": "0",
            "type": "t_contract(IRoleManage)656",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:33"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ITokenFactory)689",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:34"
          },
          {
            "label": "vault",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IVaultRwa)749",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:35"
          },
          {
            "label": "bridgeTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:36"
          },
          {
            "label": "orders",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(Order)978_storage)",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:37"
          },
          {
            "label": "limitLpIns",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultRwaManager",
            "src": "contracts\\rwa\\VaultRwaManager.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRoleManage)656": {
            "label": "contract IRoleManage",
            "numberOfBytes": "20"
          },
          "t_contract(ITokenFactory)689": {
            "label": "contract ITokenFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultRwa)749": {
            "label": "contract IVaultRwa",
            "numberOfBytes": "20"
          },
          "t_enum(PlatformType)753": {
            "label": "enum PlatformType",
            "members": [
              "HASHNOTE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Order)978_storage)": {
            "label": "mapping(address => struct VaultRwaManager.Order)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Order)978_storage": {
            "label": "struct VaultRwaManager.Order",
            "members": [
              {
                "label": "baseToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pairToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minimumDeposit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "delayBuyDay",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "delaySellDay",
                "type": "t_uint8",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "beneficialAddress",
                "type": "t_address",
                "offset": 2,
                "slot": "3"
              },
              {
                "label": "platformType",
                "type": "t_enum(PlatformType)753",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "platformHelper",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 21,
                "slot": "4"
              },
              {
                "label": "redirect",
                "type": "t_bool",
                "offset": 22,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "432135df20d0267e187ab548d30f8fb8307dac56782f79b97f5a097004157a05": {
      "address": "0x8280C7618d1f2d1648d0B690dFc9486C5Df46b6A",
      "txHash": "0x67e394a2db9489c24032d940475ddb1602d2cadf17b3b9ff299410d0edf89b04",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "pendingValueWithdraw",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:44"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:47"
          },
          {
            "label": "roleManage",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IRoleManage)4544",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:50"
          },
          {
            "label": "withdrawNft",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IWithdrawRequestNFT)4743",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:53"
          },
          {
            "label": "whitelistManager",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IWhitelistManager)4706",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:56"
          },
          {
            "label": "vaultManager",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IVaultRwaManager)4682",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:59"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(ISwapRouter02)4991",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:62"
          },
          {
            "label": "requests",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_struct(WithdrawRequest)4557_storage)",
            "contract": "VaultRwa",
            "src": "contracts\\rwa\\VaultRwa.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRoleManage)4544": {
            "label": "contract IRoleManage",
            "numberOfBytes": "20"
          },
          "t_contract(ISwapRouter02)4991": {
            "label": "contract ISwapRouter02",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultRwaManager)4682": {
            "label": "contract IVaultRwaManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWhitelistManager)4706": {
            "label": "contract IWhitelistManager",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawRequestNFT)4743": {
            "label": "contract IWithdrawRequestNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(WithdrawRequest)4557_storage)": {
            "label": "mapping(uint256 => struct IVaultRwa.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)4557_storage": {
            "label": "struct IVaultRwa.WithdrawRequest",
            "members": [
              {
                "label": "baseToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shareOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amountOfToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approved",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "completed",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
